name: CI - Dev
on:
  push:
    branches: ["Development"]
  pull_request:
    branches: ["Development"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Node.js with cache
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install web dependencies
        run: npm ci
        working-directory: ./web

      - name: Lint (web)
        run: npm run lint
        working-directory: ./web

      - name: Install backend dependencies
        run: npm ci
        working-directory: ./backend

      - name: Security scan (backend)
        run: npm audit --audit-level=moderate
        working-directory: ./backend

      - name: Build Web Dev Image
        run: |
          docker build \
            -f web/dockerfile.dev \
            -t your-org/web-dev:latest \
            ./web

      - name: Build Backend Dev Image
        run: |
          docker build \
            -f backend/dockerfile \
            -t your-org/backend-dev:latest \
            ./backend

      - name: Run Tests with Docker Compose
        run: |
          docker-compose -f compose.yml up -d
          # Example test commands:
          docker exec tapiro-web npm test || exit 1
          docker exec tapiro-API npm run test || exit 1
          docker-compose -f compose.yml down

      - name: Archive test reports (if any)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: "**/coverage*"
