name: Local Docker CI

on:
  push:
    branches: ["Development", "Production"]
  pull_request:
    branches: ["Development", "Production"]

jobs:
  determine_environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.ENVIRONMENT }}
    steps:
      - name: Determine Environment
        id: env
        run: |
          ENVIRONMENT=${{ github.ref_name }}
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_OUTPUT

  build_and_test:
    needs: determine_environment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build backend image (Development)
        if: needs.determine_environment.outputs.environment == 'Development'
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/dockerfile
          tags: backend-dev
          cache-from: type=local,dest=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Build backend image (Production)
        if: needs.determine_environment.outputs.environment == 'Production'
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/dockerfile.prod
          tags: backend-prod
          cache-from: type=local,dest=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Build web image (Development)
        if: needs.determine_environment.outputs.environment == 'Development'
        uses: docker/build-push-action@v2
        with:
          context: ./web
          file: ./web/dockerfile.dev
          tags: web-dev
          cache-from: type=local,dest=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Build web image (Production)
        if: needs.determine_environment.outputs.environment == 'Production'
        uses: docker/build-push-action@v2
        with:
          context: ./web
          file: ./web/dockerfile.prod
          tags: web-prod
          cache-from: type=local,dest=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Start containers (Development)
        if: needs.determine_environment.outputs.environment == 'Development'
        run: docker-compose -f compose.yml up -d --build

      - name: Integration tests
        if: needs.determine_environment.outputs.environment == 'Development'
        run: |
          sleep 10 # give containers time to start
          curl --retry 5 --retry-delay 5 --retry-connrefused http://localhost:3000/auth/healthcheck
          curl --retry 5 --retry-delay 5 --retry-connrefused http://localhost:3001

      - name: Stop containers (Development)
        if: needs.determine_environment.outputs.environment == 'Development'
        run: docker-compose -f compose.yml down

      - name: Run backend tests
        if: needs.determine_environment.outputs.environment == 'Development'
        run: |
          docker exec tapiro-backend npm test

      - name: Run web tests
        if: needs.determine_environment.outputs.environment == 'Development'
        run: |
          docker exec tapiro-web npm test
