services:
  backend:
    build:
      context: ./backend
      dockerfile: dockerfile.dev
      target: development
    container_name: tapiro-API
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MONGODB_URI=${MONGODB_URI}
      - DB_NAME=tapiro
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BASE_URL=http://localhost:3000
      - PORT=3000
      - AUTH0_SPA_CLIENT_ID=${AUTH0_SPA_CLIENT_ID}
      - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
      - AUTH0_TOKEN_URL=${AUTH0_TOKEN_URL}
      - AUTH0_AUTHORIZE_URL=${AUTH0_AUTHORIZE_URL}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_MANAGEMENT_API_TOKEN=${AUTH0_MANAGEMENT_API_TOKEN}
      - AUTH0_USER_ROLE_ID=${AUTH0_USER_ROLE_ID}
      - AUTH0_STORE_ROLE_ID=${AUTH0_STORE_ROLE_ID}
      - FRONTEND_URL=http://web:5173
      - AUTH0_M2M_CLIENT_ID=${AUTH0_M2M_CLIENT_ID}
      - AUTH0_M2M_CLIENT_SECRET=${AUTH0_M2M_CLIENT_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      - redis
    networks:
      - tapiro-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  web:
    build:
      context: ./web
      dockerfile: dockerfile.dev
      target: development
    container_name: tapiro-web
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend:3000
      - VITE_AUTH0_CLIENT_ID=${AUTH0_SPA_CLIENT_ID}
      - VITE_AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - VITE_AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - WATCHPACK_POLLING=true
    ports:
      - "3001:5173"
    networks:
      - tapiro-net
    depends_on:
      - backend

  redis:
    image: redis:alpine
    container_name: tapiro-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    networks:
      - tapiro-net

  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: tapiro-ai
    volumes:
      - ./ai-service:/app
      - /app/__pycache__
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - API_BASE_URL=http://backend:3000
      - MONGODB_DB_NAME=tapiro
      - BACKEND_API_URL=http://backend:3000
      - SECRET_KEY=${AI_SERVICE_API_KEY}
      - DEBUG=true
    ports:
      - "8000:8000"
    networks:
      - tapiro-net
    depends_on:
      - backend
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/heath"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

networks:
  tapiro-net:

volumes:
  redis-data:
